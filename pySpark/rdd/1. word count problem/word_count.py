from pyspark.context import SparkContext

sc = SparkContext('local', 'word count app')
rdd1 = sc.textFile("file.txt")
print(rdd1.collect())
rdd1 = rdd1.flatMap(lambda x: x.split())
print(rdd1.collect())
rdd1 = rdd1.map(lambda x: (x, 1))
print(rdd1.collect())
rdd1 = rdd1.reduceByKey(lambda x, y: x + y)
print(rdd1.collect())

# Output:
# /usr/bin/python3.10 /home/pradip/PycharmProjects/Hands-on-Big-Data-Revision/pySpark/rdd/1. word count problem/word_count.py
# ['Sqoop is for data ingestion. Hive is for SQL or structured data, Pig is for data cleaning, Mahout is for machine learning, Storm is for streaming data.', '', 'There are separate tools to perform each kind of activity, and each of the tools has different syntax to perform.', '', 'Also, Map Reduce style needs to be imposed to perform operations using these tools; even though Map Reduce key-value pair programming is required or not.', '', 'However, Spark is a general purpose engine where developers get the functionality to perform all the general purpose operations such as data ingestion, cleaning, querying, streaming, machine learning using Spark only.', '', 'Developer needs to learn only one style of writing the code. Developer does not have to learn many tools separately such as Sqoop, Hive, Storm; developers just need to learn one style of programming. Spark is appropriate for a wide range of general purpose activities.', '', 'Developer is not bound to only map and reduce style. Developers can do many other things or operations such as filter, map, reduce etc.']
# ['Sqoop', 'is', 'for', 'data', 'ingestion.', 'Hive', 'is', 'for', 'SQL', 'or', 'structured', 'data,', 'Pig', 'is', 'for', 'data', 'cleaning,', 'Mahout', 'is', 'for', 'machine', 'learning,', 'Storm', 'is', 'for', 'streaming', 'data.', 'There', 'are', 'separate', 'tools', 'to', 'perform', 'each', 'kind', 'of', 'activity,', 'and', 'each', 'of', 'the', 'tools', 'has', 'different', 'syntax', 'to', 'perform.', 'Also,', 'Map', 'Reduce', 'style', 'needs', 'to', 'be', 'imposed', 'to', 'perform', 'operations', 'using', 'these', 'tools;', 'even', 'though', 'Map', 'Reduce', 'key-value', 'pair', 'programming', 'is', 'required', 'or', 'not.', 'However,', 'Spark', 'is', 'a', 'general', 'purpose', 'engine', 'where', 'developers', 'get', 'the', 'functionality', 'to', 'perform', 'all', 'the', 'general', 'purpose', 'operations', 'such', 'as', 'data', 'ingestion,', 'cleaning,', 'querying,', 'streaming,', 'machine', 'learning', 'using', 'Spark', 'only.', 'Developer', 'needs', 'to', 'learn', 'only', 'one', 'style', 'of', 'writing', 'the', 'code.', 'Developer', 'does', 'not', 'have', 'to', 'learn', 'many', 'tools', 'separately', 'such', 'as', 'Sqoop,', 'Hive,', 'Storm;', 'developers', 'just', 'need', 'to', 'learn', 'one', 'style', 'of', 'programming.', 'Spark', 'is', 'appropriate', 'for', 'a', 'wide', 'range', 'of', 'general', 'purpose', 'activities.', 'Developer', 'is', 'not', 'bound', 'to', 'only', 'map', 'and', 'reduce', 'style.', 'Developers', 'can', 'do', 'many', 'other', 'things', 'or', 'operations', 'such', 'as', 'filter,', 'map,', 'reduce', 'etc.']
# [('Sqoop', 1), ('is', 1), ('for', 1), ('data', 1), ('ingestion.', 1), ('Hive', 1), ('is', 1), ('for', 1), ('SQL', 1), ('or', 1), ('structured', 1), ('data,', 1), ('Pig', 1), ('is', 1), ('for', 1), ('data', 1), ('cleaning,', 1), ('Mahout', 1), ('is', 1), ('for', 1), ('machine', 1), ('learning,', 1), ('Storm', 1), ('is', 1), ('for', 1), ('streaming', 1), ('data.', 1), ('There', 1), ('are', 1), ('separate', 1), ('tools', 1), ('to', 1), ('perform', 1), ('each', 1), ('kind', 1), ('of', 1), ('activity,', 1), ('and', 1), ('each', 1), ('of', 1), ('the', 1), ('tools', 1), ('has', 1), ('different', 1), ('syntax', 1), ('to', 1), ('perform.', 1), ('Also,', 1), ('Map', 1), ('Reduce', 1), ('style', 1), ('needs', 1), ('to', 1), ('be', 1), ('imposed', 1), ('to', 1), ('perform', 1), ('operations', 1), ('using', 1), ('these', 1), ('tools;', 1), ('even', 1), ('though', 1), ('Map', 1), ('Reduce', 1), ('key-value', 1), ('pair', 1), ('programming', 1), ('is', 1), ('required', 1), ('or', 1), ('not.', 1), ('However,', 1), ('Spark', 1), ('is', 1), ('a', 1), ('general', 1), ('purpose', 1), ('engine', 1), ('where', 1), ('developers', 1), ('get', 1), ('the', 1), ('functionality', 1), ('to', 1), ('perform', 1), ('all', 1), ('the', 1), ('general', 1), ('purpose', 1), ('operations', 1), ('such', 1), ('as', 1), ('data', 1), ('ingestion,', 1), ('cleaning,', 1), ('querying,', 1), ('streaming,', 1), ('machine', 1), ('learning', 1), ('using', 1), ('Spark', 1), ('only.', 1), ('Developer', 1), ('needs', 1), ('to', 1), ('learn', 1), ('only', 1), ('one', 1), ('style', 1), ('of', 1), ('writing', 1), ('the', 1), ('code.', 1), ('Developer', 1), ('does', 1), ('not', 1), ('have', 1), ('to', 1), ('learn', 1), ('many', 1), ('tools', 1), ('separately', 1), ('such', 1), ('as', 1), ('Sqoop,', 1), ('Hive,', 1), ('Storm;', 1), ('developers', 1), ('just', 1), ('need', 1), ('to', 1), ('learn', 1), ('one', 1), ('style', 1), ('of', 1), ('programming.', 1), ('Spark', 1), ('is', 1), ('appropriate', 1), ('for', 1), ('a', 1), ('wide', 1), ('range', 1), ('of', 1), ('general', 1), ('purpose', 1), ('activities.', 1), ('Developer', 1), ('is', 1), ('not', 1), ('bound', 1), ('to', 1), ('only', 1), ('map', 1), ('and', 1), ('reduce', 1), ('style.', 1), ('Developers', 1), ('can', 1), ('do', 1), ('many', 1), ('other', 1), ('things', 1), ('or', 1), ('operations', 1), ('such', 1), ('as', 1), ('filter,', 1), ('map,', 1), ('reduce', 1), ('etc.', 1)]
# [('Sqoop', 1), ('is', 9), ('for', 6), ('data', 3), ('ingestion.', 1), ('Hive', 1), ('SQL', 1), ('or', 3), ('structured', 1), ('data,', 1), ('Pig', 1), ('cleaning,', 2), ('Mahout', 1), ('machine', 2), ('learning,', 1), ('Storm', 1), ('streaming', 1), ('data.', 1), ('There', 1), ('are', 1), ('separate', 1), ('tools', 3), ('to', 9), ('perform', 3), ('each', 2), ('kind', 1), ('of', 5), ('activity,', 1), ('and', 2), ('the', 4), ('has', 1), ('different', 1), ('syntax', 1), ('perform.', 1), ('Also,', 1), ('Map', 2), ('Reduce', 2), ('style', 3), ('needs', 2), ('be', 1), ('imposed', 1), ('operations', 3), ('using', 2), ('these', 1), ('tools;', 1), ('even', 1), ('though', 1), ('key-value', 1), ('pair', 1), ('programming', 1), ('required', 1), ('not.', 1), ('However,', 1), ('Spark', 3), ('a', 2), ('general', 3), ('purpose', 3), ('engine', 1), ('where', 1), ('developers', 2), ('get', 1), ('functionality', 1), ('all', 1), ('such', 3), ('as', 3), ('ingestion,', 1), ('querying,', 1), ('streaming,', 1), ('learning', 1), ('only.', 1), ('Developer', 3), ('learn', 3), ('only', 2), ('one', 2), ('writing', 1), ('code.', 1), ('does', 1), ('not', 2), ('have', 1), ('many', 2), ('separately', 1), ('Sqoop,', 1), ('Hive,', 1), ('Storm;', 1), ('just', 1), ('need', 1), ('programming.', 1), ('appropriate', 1), ('wide', 1), ('range', 1), ('activities.', 1), ('bound', 1), ('map', 1), ('reduce', 2), ('style.', 1), ('Developers', 1), ('can', 1), ('do', 1), ('other', 1), ('things', 1), ('filter,', 1), ('map,', 1), ('etc.', 1)]
#
# Process finished with exit code 0